CREATE SCHEMA IF NOT EXISTS USERMANAGER;
DROP TABLE IF EXISTS USERMANAGER.users;

DROP SEQUENCE IF EXISTS USERMANAGER.user_seq;

-- Empezamos la secuencia en 5 porque insertamos 5 usuarios de prueba
CREATE SEQUENCE USERMANAGER.user_seq INCREMENT BY 1 START WITH 5;

-- No borramos los usuarios de BBDD cuando se dan de baja ya que se tendrian que preservar (facturas, documentos, etc)
CREATE TABLE USERMANAGER.users (
  ID INT PRIMARY KEY NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  SURNAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  ROLE Varchar(10) NOT NULL DEFAULT 'USR',
  BIRTH_DATE DATE NOT NULL,
  CREATION_DATE TIMESTAMP NOT NULL DEFAULT now(),
  DELETION_DATE TIMESTAMP 
);

-- Password 12345 para todos los usuarios
INSERT into USERMANAGER.users(id,NAME,SURNAME,email,password,ROLE,BIRTH_DATE) values(0,'admin','admin sistemas','admin@dru-id.com','$2a$10$6QfTBtrR1QIKb1qn6LOW9Or/tzztgtuISmLjBC3ttrXse3QtCrHRC','ROLE_ADMIN','1975-09-17');
INSERT into USERMANAGER.users(id,NAME,SURNAME,email,password,BIRTH_DATE) values(1,'usuario','usuario Prueba','usuario@dru-id.com','$2a$10$6QfTBtrR1QIKb1qn6LOW9Or/tzztgtuISmLjBC3ttrXse3QtCrHRC','1987-11-20');
INSERT into USERMANAGER.users(id,NAME,SURNAME,email,password,BIRTH_DATE) values(2,'Manuel','Castillo Perez','manuel@dru-id.com','$2a$10$6QfTBtrR1QIKb1qn6LOW9Or/tzztgtuISmLjBC3ttrXse3QtCrHRC','1992-06-07');
INSERT into USERMANAGER.users(id,NAME,SURNAME,email,password,BIRTH_DATE) values(3,'Carmen','Romero Martinez','carmen@dru-id.com','$2a$10$6QfTBtrR1QIKb1qn6LOW9Or/tzztgtuISmLjBC3ttrXse3QtCrHRC','2002-09-01');
INSERT into USERMANAGER.users(id,NAME,SURNAME,email,password,BIRTH_DATE) values(4,'Marta','Casas Boija','marta@dru-id.com','$2a$10$6QfTBtrR1QIKb1qn6LOW9Or/tzztgtuISmLjBC3ttrXse3QtCrHRC','1997-04-13');


-- Tablas para la gestion de las sesiones 
DROP INDEX IF EXISTS SPRING_SESSION_IX1;
DROP INDEX IF EXISTS SPRING_SESSION_IX2;
DROP INDEX IF EXISTS SPRING_SESSION_IX3;
DROP TABLE IF EXISTS SPRING_SESSION_ATTRIBUTES;
DROP TABLE IF EXISTS SPRING_SESSION;

CREATE TABLE SPRING_SESSION(
    PRIMARY_ID CHAR(36) NOT NULL,
    SESSION_ID CHAR(36) NOT NULL,
    CREATION_TIME BIGINT NOT NULL,
    LAST_ACCESS_TIME BIGINT NOT NULL,
    MAX_INACTIVE_INTERVAL INT NOT NULL,
    EXPIRY_TIME BIGINT NOT NULL,
    PRINCIPAL_NAME VARCHAR(100),
    CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)
);

CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);
CREATE INDEX SPRING_SESSION_IX2 ON SPRING_SESSION (EXPIRY_TIME);
CREATE INDEX SPRING_SESSION_IX3 ON SPRING_SESSION (PRINCIPAL_NAME);

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
    SESSION_PRIMARY_ID CHAR(36) NOT NULL,
    ATTRIBUTE_NAME VARCHAR(200) NOT NULL,
    ATTRIBUTE_BYTES BLOB NOT NULL,
    CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),
    CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES SPRING_SESSION(PRIMARY_ID) ON DELETE CASCADE
);
